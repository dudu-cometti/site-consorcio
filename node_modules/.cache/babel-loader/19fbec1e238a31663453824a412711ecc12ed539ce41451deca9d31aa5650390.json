{"ast":null,"code":"const API_BASE_URL = \"https://www.consorcionacionalhonda.com.br/api\";\nexport const fetchVeiculos = async (estado, categoria) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/veiculos/categorias/list/${estado}/${categoria}`);\n\n    // Verifica se a resposta está OK\n    if (!response.ok) {\n      throw new Error(`Erro na requisição: ${response.status}`);\n    }\n\n    // Converte a resposta para texto\n    const text = await response.text();\n    console.log(\"Resposta da API (texto):\", text); // Log para depuração\n\n    // Tenta converter o texto para JSON\n    try {\n      const data = JSON.parse(text);\n      console.log(\"Dados da API (JSON):\", data); // Log para depuração\n      return data.veículos || []; // Retorna a lista de veículos ou um array vazio\n    } catch (jsonError) {\n      console.error(\"Erro ao converter resposta para JSON:\", jsonError);\n      throw new Error(\"Resposta da API não é um JSON válido.\");\n    }\n  } catch (error) {\n    console.error(\"Erro ao buscar veículos:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["API_BASE_URL","fetchVeiculos","estado","categoria","response","fetch","ok","Error","status","text","console","log","data","JSON","parse","veículos","jsonError","error"],"sources":["/Users/eduardocometti/ProjetosVSC/site-consorcio/src/api/veiculos.js"],"sourcesContent":["const API_BASE_URL = \"https://www.consorcionacionalhonda.com.br/api\";\n\nexport const fetchVeiculos = async (estado, categoria) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/veiculos/categorias/list/${estado}/${categoria}`);\n    \n    // Verifica se a resposta está OK\n    if (!response.ok) {\n      throw new Error(`Erro na requisição: ${response.status}`);\n    }\n\n    // Converte a resposta para texto\n    const text = await response.text();\n    console.log(\"Resposta da API (texto):\", text); // Log para depuração\n\n    // Tenta converter o texto para JSON\n    try {\n      const data = JSON.parse(text);\n      console.log(\"Dados da API (JSON):\", data); // Log para depuração\n      return data.veículos || []; // Retorna a lista de veículos ou um array vazio\n    } catch (jsonError) {\n      console.error(\"Erro ao converter resposta para JSON:\", jsonError);\n      throw new Error(\"Resposta da API não é um JSON válido.\");\n    }\n  } catch (error) {\n    console.error(\"Erro ao buscar veículos:\", error);\n    throw error;\n  }\n};"],"mappings":"AAAA,MAAMA,YAAY,GAAG,+CAA+C;AAEpE,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAOC,MAAM,EAAEC,SAAS,KAAK;EACxD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,YAAY,6BAA6BE,MAAM,IAAIC,SAAS,EAAE,CAAC;;IAE/F;IACA,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;IAC3D;;IAEA;IACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClCC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,IAAI,CAAC,CAAC,CAAC;;IAE/C;IACA,IAAI;MACF,MAAMG,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACL,IAAI,CAAC;MAC7BC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEC,IAAI,CAAC,CAAC,CAAC;MAC3C,OAAOA,IAAI,CAACG,QAAQ,IAAI,EAAE,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOC,SAAS,EAAE;MAClBN,OAAO,CAACO,KAAK,CAAC,uCAAuC,EAAED,SAAS,CAAC;MACjE,MAAM,IAAIT,KAAK,CAAC,uCAAuC,CAAC;IAC1D;EACF,CAAC,CAAC,OAAOU,KAAK,EAAE;IACdP,OAAO,CAACO,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}